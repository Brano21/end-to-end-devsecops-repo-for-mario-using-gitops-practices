name: Run SAST, Build and push supermario image, scan image, Update deployment and version files
on:
  push:
    branches:
      - main

jobs:
  # sonarqube:
  #   name: Run SAST
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         # Disabling shallow clones is recommended for improving the relevancy of reporting
  #         fetch-depth: 0
  #
  #     - name: Send code to SonaQube
  #       uses: SonarSource/sonarqube-scan-action@v5
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  get_version:
    name: Calculate next version
    runs-on: ubuntu-latest
    #needs: sonarqube
    outputs:
      version: ${{ steps.setver.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Calculate version
        id: setver
        run: |
          VERSION=$(cat version.txt)
          NEW_VERSION=$((VERSION + 1))
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
  
  build_and_push_image:
    name: Build and push supermario image
    runs-on: ubuntu-latest
    needs: get_version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: brano21/supermariogitopsproject:${{ needs.get_version.outputs.version }}
          provenance: true
          sbom: true

  docker_scout:
    name: Scan image with Docker Scout
    runs-on: ubuntu-latest
    needs: [build_and_push_image, get_version]
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Scan image with Docker Scout
        uses: docker/scout-action@v1
        with:
          command: cves
          image: brano21/supermariogitopsproject:${{ needs.get_version.outputs.version }}
          sarif-file: sarif.output.json
          summary: true

      - name: Upload SARIF result
        id: upload-sarif
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif.output.json

  update_deployment:
    name: Update deployment and version files
    runs-on: ubuntu-latest
    needs: [docker_scout, get_version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
           git config --global user.email "${{ secrets.GIT_EMAIL}}"
           git config --global user.name "${{ secrets.GIT_USERNAME}}"

      - name: Download repository
        run: git pull

      - name: Update deployment file
        run: |
          sed -i "s|image: brano21/supermariogitopsproject:[0-9]*|image: brano21/supermariogitopsproject:${{ needs.get_version.outputs.version }}|g" deployment.yaml

      - name: Update version file
        run: echo ${{ needs.get_version.outputs.version }} > version.txt

      - name: Commit changes
        run: |
          git add deployment.yaml version.txt
          git commit -m "Update deployment and version files to version ${{ needs.get_version.outputs.version }}"
          git push